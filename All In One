
// ---------- Frontend Section (User Interface) ----------
const htmlTemplate = `
<!DOCTYPE html>
<html>
<head>
  <title>Team Builder</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
  <div id="app" class="max-w-4xl mx-auto p-4"></div>
  <script>
    // ---------- Frontend Logic ----------
    const selectedPlayers = [];
    const friends = [
      { id: 1, username: '@vitalik', avatar: 'https://i.imgur.com/1.png', buildScore: 94.2 },
      { id: 2, username: '@dwr', avatar: 'https://i.imgur.com/2.png', buildScore: 88.7 }
    ];

    function render() {
      const app = document.getElementById('app');
      app.innerHTML = \`
        <h1 class="text-3xl font-bold mb-8">Team Builder</h1>
        <div class="grid grid-cols-3 gap-4">
          \${friends.map(friend => \`
            <div class="bg-white p-4 rounded-lg shadow">
              <img src="\${friend.avatar}" class="w-16 h-16 rounded-full mx-auto">
              <h3 class="text-center mt-2">\${friend.username}</h3>
              <button 
                onclick="addPlayer('\${friend.id}')"
                class="mt-2 bg-blue-500 text-white p-2 rounded w-full"
              >
                Add Player
              </button>
            </div>
          \`).join('')}
        </div>
        <button 
          onclick="mintTeam()"
          class="mt-8 bg-green-500 text-white p-2 rounded"
        >
          Mint Team NFT
        </button>
      \`;
    }

    async function mintTeam() {
      const response = await fetch('/api/mint-team', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          address: '0xUserAddress', // Replace with the user's actual address
          players: selectedPlayers.map(p => p.username),
          buildScores: selectedPlayers.map(p => p.buildScore)
        })
      });
      const result = await response.json();
      alert(\`NFT Minted! TX Hash: \${result.txHash}\`);
    }

    function addPlayer(id) {
      const player = friends.find(p => p.id == id);
      if (player) selectedPlayers.push(player);
      render();
    }

    // Initial rendering
    render();
  </script>
</body>
</html>
`;

// ---------- Server Routes ----------
app.get('/', (req, res) => res.send(htmlTemplate));

app.post('/api/mint-team', async (req, res) => {
  const { address, players, buildScores } = req.body;
  try {
    const provider = new ethers.providers.JsonRpcProvider(RPC_URL);
    const wallet = new ethers.Wallet(PRIVATE_KEY, provider);
    const contract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, wallet);
    const tx = await contract.mintTeamNFT(address, players, buildScores);
    await tx.wait();
    res.json({ success: true, txHash: tx.hash });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// ---------- Run the Server ----------
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(\`Server running on http://localhost:\${PORT}\`);
});
